<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.talend.studio</groupId>
    <artifactId>tesb-studio-se</artifactId>
    <version>8.0.1-SNAPSHOT</version>
    <relativePath>../../../</relativePath>
  </parent>
  <artifactId>org.talend.designer.esb.components.rs.provider</artifactId>
  <packaging>eclipse-plugin</packaging>
  <name>Talend Designer ESB Tooling REST Service provider plugin</name>
  <properties>
	  <slf4j-api.version>1.7.32</slf4j-api.version>
	  <reflections.version>0.9.11</reflections.version>
	  <guava.version>30.0-jre</guava.version>
	  <snakeyaml.version>1.32</snakeyaml.version>
	  <delight-rhino-sandbox.version>0.0.15</delight-rhino-sandbox.version>
	  <rhino.version>1.7.14</rhino.version>
  </properties>
    <dependencies>
        <dependency>
            <groupId>org.talend.studio</groupId>
            <artifactId>org.talend.libraries.esb</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.javadelight</groupId>
            <artifactId>delight-rhino-sandbox</artifactId>
            <version>${delight-rhino-sandbox.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mozilla</groupId>
            <artifactId>rhino</artifactId>
            <version>${rhino.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeTypes>pom</excludeTypes>
                            <excludeTransitive>true</excludeTransitive>
                            <outputDirectory>${basedir}/lib</outputDirectory>
                            <excludeGroupIds>p2.eclipse-plugin,org.talend.studio</excludeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-third-party</id>
						<goals>
							<goal>add-third-party</goal>
						</goals>
						<configuration>
							<includeTransitiveDependencies>false</includeTransitiveDependencies>
						</configuration>
					</execution>
					<execution>
						<id>update-project-license</id>
						<goals>
							<goal>update-project-license</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>create-notice</id>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<concat destfile="${basedir}/NOTICE" append="yes" ignoreempty="false" fixlastline="yes">
									<path path="${project.build.directory}/generated-sources/license/THIRD-PARTY.txt" />
								</concat>
								<delete file="${project.build.directory}/classes/THIRD-PARTY.txt" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}/lib</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
